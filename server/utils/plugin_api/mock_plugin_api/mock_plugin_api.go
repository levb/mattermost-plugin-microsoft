// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mattermost/mattermost-plugin-mscalendar/server/utils/plugin_api (interfaces: PluginAPI)

// Package mock_plugin_api is a generated GoMock package.
package mock_plugin_api

import (
	gomock "github.com/golang/mock/gomock"
	model "github.com/mattermost/mattermost-server/v5/model"
	reflect "reflect"
)

// MockPluginAPI is a mock of PluginAPI interface
type MockPluginAPI struct {
	ctrl     *gomock.Controller
	recorder *MockPluginAPIMockRecorder
}

// MockPluginAPIMockRecorder is the mock recorder for MockPluginAPI
type MockPluginAPIMockRecorder struct {
	mock *MockPluginAPI
}

// NewMockPluginAPI creates a new mock instance
func NewMockPluginAPI(ctrl *gomock.Controller) *MockPluginAPI {
	mock := &MockPluginAPI{ctrl: ctrl}
	mock.recorder = &MockPluginAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPluginAPI) EXPECT() *MockPluginAPIMockRecorder {
	return m.recorder
}

// GetUserStatus mocks base method
func (m *MockPluginAPI) GetUserStatus(arg0 string) (*model.Status, *model.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserStatus", arg0)
	ret0, _ := ret[0].(*model.Status)
	ret1, _ := ret[1].(*model.AppError)
	return ret0, ret1
}

// GetUserStatus indicates an expected call of GetUserStatus
func (mr *MockPluginAPIMockRecorder) GetUserStatus(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserStatus", reflect.TypeOf((*MockPluginAPI)(nil).GetUserStatus), arg0)
}

// GetUserStatusesByIds mocks base method
func (m *MockPluginAPI) GetUserStatusesByIds(arg0 []string) ([]*model.Status, *model.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserStatusesByIds", arg0)
	ret0, _ := ret[0].([]*model.Status)
	ret1, _ := ret[1].(*model.AppError)
	return ret0, ret1
}

// GetUserStatusesByIds indicates an expected call of GetUserStatusesByIds
func (mr *MockPluginAPIMockRecorder) GetUserStatusesByIds(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserStatusesByIds", reflect.TypeOf((*MockPluginAPI)(nil).GetUserStatusesByIds), arg0)
}

// UpdateUserStatus mocks base method
func (m *MockPluginAPI) UpdateUserStatus(arg0, arg1 string) (*model.Status, *model.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateUserStatus", arg0, arg1)
	ret0, _ := ret[0].(*model.Status)
	ret1, _ := ret[1].(*model.AppError)
	return ret0, ret1
}

// UpdateUserStatus indicates an expected call of UpdateUserStatus
func (mr *MockPluginAPIMockRecorder) UpdateUserStatus(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateUserStatus", reflect.TypeOf((*MockPluginAPI)(nil).UpdateUserStatus), arg0, arg1)
}
