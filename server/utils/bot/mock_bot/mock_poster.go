// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mattermost/mattermost-plugin-msoffice/server/utils/bot (interfaces: Poster)

// Package mock_bot is a generated GoMock package.
package mock_bot

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPoster is a mock of Poster interface
type MockPoster struct {
	ctrl     *gomock.Controller
	recorder *MockPosterMockRecorder
}

// MockPosterMockRecorder is the mock recorder for MockPoster
type MockPosterMockRecorder struct {
	mock *MockPoster
}

// NewMockPoster creates a new mock instance
func NewMockPoster(ctrl *gomock.Controller) *MockPoster {
	mock := &MockPoster{ctrl: ctrl}
	mock.recorder = &MockPosterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPoster) EXPECT() *MockPosterMockRecorder {
	return m.recorder
}

// PostDirect mocks base method
func (m *MockPoster) PostDirect(arg0, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PostDirect", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// PostDirect indicates an expected call of PostDirect
func (mr *MockPosterMockRecorder) PostDirect(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PostDirect", reflect.TypeOf((*MockPoster)(nil).PostDirect), arg0, arg1, arg2)
}

// PostEphemeral mocks base method
func (m *MockPoster) PostEphemeral(arg0, arg1, arg2 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "PostEphemeral", arg0, arg1, arg2)
}

// PostEphemeral indicates an expected call of PostEphemeral
func (mr *MockPosterMockRecorder) PostEphemeral(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PostEphemeral", reflect.TypeOf((*MockPoster)(nil).PostEphemeral), arg0, arg1, arg2)
}
